name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy_infrastructure:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install Bicep CLI
      run: |
        curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
        chmod +x ./bicep
        sudo mv ./bicep /usr/local/bin/bicep
        bicep --help

    - name: Validate Bicep
      run: |
        bicep build ./resume_infra/main.bicep

    - name: Deploy Bicep
      run: |
        az deployment group create --resource-group azr_resume --template-file ./resume_infra/main.bicep --parameters accountKey=${{ secrets.STORAGE_ACCOUNT_KEY }} 

  deploy_frontend:
    needs: deploy_infrastructure
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set active account
      run: | 
        az account set --subscription ${{ secrets.SUBSCRIPTION_ID }} 

    - name: Enable Static Website
      run: |
        az storage blob service-properties update --connection-string "${{ secrets.STORAGE_CONNECTION_STRING }}" --static-website --404-document 404.html --index-document index.html


    - name: Upload to Azure Storage
      uses: azure/cli@v1
      with:
        azcliversion: 2.55.0
        inlineScript: |
          az storage blob upload-batch --account-name azrstaccresume --source ./resume_frontend --destination '$web'


  test_and_deploy_backend:
    needs: deploy_frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest azure-functions azure-data-tables

    - name: Install Azure Functions Core Tools
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
        sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
        sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list'
        sudo apt-get update
        sudo apt-get install azure-functions-core-tools-3
    

    - name: Create counter entity
      env:
        COSMOS_CONNECTION_STRING: ${{ secrets.COSMOS_CONNECTION_STRING }}
      run: |
        python -c "
        from azure.data.tables import TableClient
        import os

        # Create a TableClient to interact with your local Azure Table Storage
        table_client = TableClient.from_connection_string(os.getenv('COSMOS_CONNECTION_STRING'), 'visitors')

        try:
            # Try to get the 'counter' entity
            counter_entity = table_client.get_entity(partition_key='partition1', row_key='counter')
        except:
            # If the 'counter' entity doesn't exist, create it
            counter_entity = {'PartitionKey': 'partition1', 'RowKey': 'counter', 'visitorCount': 0}
            table_client.create_entity(entity=counter_entity)
        "

    # - name: Run tests
    #   env:
    #     COSMOS_CONNECTION_STRING: ${{ secrets.COSMOS_CONNECTION_STRING }}
    #     AzureWebJobsStorage: ${{ secrets.STORAGE_CONNECTION_STRING }}
    #   run: |
    #     # Simple tests for your Azure Function
    #     python -m pytest -v


    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Package application
      id: package
      run: |
        cd resume_backend
        func azure functionapp publish azrappresume --python
        pwd
        ls -la

    # - name: Download blob to runner
    #   run: |
    #       pwd
    #       ls -la
    #       az storage blob download --name scm-latest-azrappresume.zip --file ./resume_backend/scm-latest-azrappresume.zip --account-name azrstaccresume --container-name scm-releases


    # - name: Deploy application
    #   run: |
    #     cd resume_backend
    #     ls -la
    #     az functionapp deployment source config-zip --resource-group azr_resume --name azrappresume --src ./scm-latest-azrappresume.zip
